(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]||[]).push([["6401d82a"],{"6401d82a":function(e,n,t){"use strict";t.d(n,"__esModule",{value:!0}),t.d(n,"texts",{enumerable:!0,get:function(){return a;}}),t("1958b289");let a=[{value:"Here are the frequently asked questions about Ant Design X and antd that you should look up before you ask in the community or create a new issue. Additionally, you can refer to previous ",paraId:0},{value:"issues",paraId:0},{value:" for more information.",paraId:0},{value:"Currently, you can achieve custom markdown content rendering by using the ",paraId:1,tocIndex:0},{value:"markdown-it",paraId:1,tocIndex:0},{value:" library. In the Bubble component, you can customize the rendering method through the ",paraId:1,tocIndex:0},{value:"messageRender",paraId:1,tocIndex:0},{value:" prop:",paraId:1,tocIndex:0},{value:"import { Bubble } from '@ant-design/x';\nimport { Typography } from 'antd';\nimport markdownit from 'markdown-it';\n\nconst md = markdownit({ html: true, breaks: true });\n\nconst renderMarkdown = (content) => {\n  return (\n    <Typography>\n      <div dangerouslySetInnerHTML={{ __html: md.render(content) }} />\n    </Typography>\n  );\n};\n\nconst App = () => (\n  <Bubble\n    content=\"**Bold text** and [link](https://x.ant.design)\"\n    messageRender={renderMarkdown}\n  />\n);\n",paraId:2,tocIndex:0},{value:"For more detailed examples, please refer to ",paraId:3,tocIndex:0},{value:"Bubble Markdown Demo",paraId:4,tocIndex:0},{value:".",paraId:3,tocIndex:0},{value:"\u{1F4E2} Coming Soon",paraId:5,tocIndex:0},{value:": Ant Design X 2.0 will have built-in markdown rendering support, allowing direct markdown content rendering without additional configuration.",paraId:5,tocIndex:0},{value:"Currently, Ant Design X only provides a React version. Ant Design X is an AI interaction component library specifically designed for the React framework, and there are currently no plans for a Vue version.",paraId:6,tocIndex:1},{value:"If you are using the Vue tech stack, we recommend following our GitHub repository for the latest updates, or participating in open source contributions to help us support more frameworks.",paraId:7,tocIndex:1},{value:"<think>",paraId:8},{value:"<think>",paraId:9,tocIndex:2},{value:" tags are typically used to display AI thinking processes. Currently, you can handle them through custom message transformation:",paraId:9,tocIndex:2},{value:"// Reference the implementation in copilot.tsx\nconst transformMessage = (info) => {\n  const { originMessage, chunk } = info || {};\n  let currentContent = '';\n  let currentThink = '';\n  \n  // Parse thinking content from AI response\n  if (chunk?.data && !chunk?.data.includes('DONE')) {\n    const message = JSON.parse(chunk?.data);\n    currentThink = message?.choices?.[0]?.delta?.reasoning_content || '';\n    currentContent = message?.choices?.[0]?.delta?.content || '';\n  }\n\n  let content = '';\n  \n  if (!originMessage?.content && currentThink) {\n    content = `<think>${currentThink}`;\n  } else if (\n    originMessage?.content?.includes('<think>') &&\n    !originMessage?.content.includes('</think>') &&\n    currentContent\n  ) {\n    content = `${originMessage?.content}</think>${currentContent}`;\n  } else {\n    content = `${originMessage?.content || ''}${currentThink}${currentContent}`;\n  }\n\n  return { content, role: 'assistant' };\n};\n",paraId:10,tocIndex:2},{value:"You can also use the ",paraId:11,tocIndex:2},{value:"ThoughtChain",paraId:11,tocIndex:2},{value:" component to display structured thinking steps:",paraId:11,tocIndex:2},{value:"import { ThoughtChain } from '@ant-design/x';\n\nconst App = () => (\n  <ThoughtChain\n    items={[\n      {\n        key: '1',\n        title: 'Understanding the problem',\n        content: 'Analyzing user needs and problem context',\n        status: 'success',\n      },\n      {\n        key: '2', \n        title: 'Thinking solutions',\n        content: 'Considering multiple possible solutions',\n        status: 'pending',\n      }\n    ]}\n  />\n);\n",paraId:12,tocIndex:2},{value:"For more implementation approaches, please refer to ",paraId:13,tocIndex:2},{value:"Copilot Example",paraId:13,tocIndex:2},{value:" and ",paraId:13,tocIndex:2},{value:"ThoughtChain Component Documentation",paraId:14,tocIndex:2},{value:".",paraId:13,tocIndex:2},{value:"\u{1F4E2} Coming Soon",paraId:15,tocIndex:2},{value:": Ant Design X 2.0 will introduce a new Think component specifically for displaying AI thinking processes, providing a more convenient solution for rendering thought chains. See ",paraId:15,tocIndex:2},{value:"PR #946",paraId:15,tocIndex:2},{value:".",paraId:15,tocIndex:2},{value:"Ant Design X is based on Ant Design's design system and has responsive capabilities. For mobile adaptation, we recommend the following approaches:",paraId:16,tocIndex:3},{value:"Use responsive layout",paraId:17,tocIndex:3},{value:": Combine Ant Design's Grid system and breakpoint system",paraId:17,tocIndex:3},{value:"Adjust component sizes",paraId:17,tocIndex:3},{value:": Use the ",paraId:17,tocIndex:3},{value:"size",paraId:17,tocIndex:3},{value:" prop of components, using ",paraId:17,tocIndex:3},{value:"small",paraId:17,tocIndex:3},{value:" size on mobile",paraId:17,tocIndex:3},{value:"Optimize interaction experience",paraId:17,tocIndex:3},{value:":\n",paraId:17,tocIndex:3},{value:"Adjust Bubble component bubble size and spacing",paraId:18,tocIndex:3},{value:"Use touch-friendly Sender input box design",paraId:18,tocIndex:3},{value:"Consider using the ",paraId:18,tocIndex:3},{value:"Conversations",paraId:18,tocIndex:3},{value:" component's collapse functionality",paraId:18,tocIndex:3},{value:'import { Bubble, Sender } from \'@ant-design/x\';\nimport { ConfigProvider } from \'antd\';\n\nconst App = () => (\n  <ConfigProvider\n    theme={{\n      components: {\n        // You can customize mobile styles here\n      }\n    }}\n  >\n    <Bubble.List \n      items={messages}\n      size="small" // Use small size for mobile\n    />\n    <Sender \n      placeholder="Please enter..."\n      size="small"\n    />\n  </ConfigProvider>\n);\n',paraId:19,tocIndex:3},{value:"Currently, Ant Design X mainly targets desktop AI interaction scenarios. If you have special mobile requirements, we recommend implementing better experiences through custom styles or combining with mobile UI frameworks.",paraId:20,tocIndex:3}];}}]);
//# sourceMappingURL=6401d82a-async.6171cc27.js.map